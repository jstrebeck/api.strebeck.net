name: Deploy to ECR

on:
  push:
    branches:
    - main

jobs:
  Build:
    name: Build Image
    runs-on: ubuntu-latest
   
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build, tag, and push image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        REGISTRY_ALIAS: c9v8v5y5
        REPOSITORY: api.strebeck.net
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
        docker tag $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest
  Deploy:
    name: Deploy to k8s
    runs-on: self-hosted
    needs: Build

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Deploy to k8s
      uses: swdotcom/update-and-apply-kubernetes-configs@v1
      with:
        k8-config-file-paths: k8s/apistrebecknet.yaml
        replacement-method: defined
      env:
        IMAGE_TAG: ${{ github.sha }}